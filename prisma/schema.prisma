generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Type {
  PUBLIC
  PRIVATE
}

enum PaymentStatus {
  ACTIVE
  CANCELED
  PAST_DUE
  INCOMPLETE
}

enum PlanType {
  FREE
  PLUS
  PRO_PLUS
}

model User {
  id               String          @id @default(uuid())
  stripeCustomerId String?
  name             String
  email            String          @unique
  passwordHash     String?
  designs          Designs[]
  maxDesigns       Int
  subscriptions    Subscriptions[]
  createdAt        DateTime        @default(now())
}

model Designs {
  id         String   @id @default(uuid())
  prompt     String
  images     Images[]
  visibility Type     @default(PUBLIC)
  users      User[]
  createdAt  DateTime @default(now())
}

model Images {
  id           String   @id @default(uuid())
  publicId     String   @unique
  url          String
  secureUrl    String
  originalName String
  format       String
  width        Int
  height       Int
  size         Int
  Designs      Designs? @relation(fields: [designsId], references: [id], onDelete: Cascade)
  designsId    String?
}

model Subscriptions {
  id                   String        @id @default(uuid())
  user                 User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId               String
  stripeSubscriptionId String?       @unique
  stripePriceId        String?
  planType             PlanType
  status               PaymentStatus
  currentPeriodEnd     DateTime?
  createdAt            DateTime      @default(now())
  updatedAt            DateTime      @updatedAt

  @@unique([userId, planType, status], name: "unique_active_subscription")
  @@index([userId, status])
}
